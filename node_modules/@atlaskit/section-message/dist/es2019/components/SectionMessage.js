import React from 'react';
import Button from '@atlaskit/button/custom-theme-button';
import { baseAppearanceObj } from '../theme';
import { Action, Actions, Container, ContentContainer, Description, IconWrapper, Title, } from './styled';
export default class SectionMessage extends React.Component {
    constructor() {
        super(...arguments);
        this.renderAction = (action, linkComponent) => {
            const { href, key, onClick, text, testId } = action;
            return (React.createElement(Action, { key: key, "data-testid": testId }, onClick || href ? (React.createElement(Button, { appearance: "link", spacing: "none", onClick: onClick, href: href, component: linkComponent }, text)) : (text)));
        };
    }
    render() {
        const { children, title, actions, appearance, icon, linkComponent, testId, } = this.props;
        //needs typecasting because TS is not recognising default props :(
        const appearanceObj = baseAppearanceObj[appearance] || baseAppearanceObj.info;
        const Icon = icon || appearanceObj.Icon;
        return (React.createElement(Container, { backgroundColor: appearanceObj.backgroundColor, "data-testid": testId },
            React.createElement(IconWrapper, null,
                React.createElement(Icon, { primaryColor: appearanceObj.primaryIconColor, secondaryColor: appearanceObj.backgroundColor })),
            React.createElement(ContentContainer, null,
                title ? React.createElement(Title, null, title) : null,
                children ? React.createElement(Description, null, children) : null,
                actions && actions.length ? (React.createElement(Actions, null, actions.map(action => this.renderAction(action, linkComponent)))) : null)));
    }
}
SectionMessage.defaultProps = {
    appearance: 'info',
};
//# sourceMappingURL=SectionMessage.js.map