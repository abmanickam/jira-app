import { __assign, __awaiter, __generator, __read } from "tslib";
export var getCacheKey = function (commandName, config, options) { return __awaiter(void 0, void 0, void 0, function () {
    var accessKeyId, identifiers;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4, config.credentials()];
            case 1:
                accessKeyId = (_a.sent()).accessKeyId;
                identifiers = options.identifiers;
                return [2, JSON.stringify(__assign(__assign({}, (accessKeyId && { accessKeyId: accessKeyId })), (identifiers && {
                        commandName: commandName,
                        identifiers: Object.entries(identifiers)
                            .sort()
                            .reduce(function (acc, _a) {
                            var _b;
                            var _c = __read(_a, 2), key = _c[0], value = _c[1];
                            return (__assign(__assign({}, acc), (_b = {}, _b[key] = value, _b)));
                        }, {}),
                    })))];
        }
    });
}); };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q2FjaGVLZXkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZ2V0Q2FjaGVLZXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUtBLE1BQU0sQ0FBQyxJQUFNLFdBQVcsR0FBRyxVQUN6QixXQUFtQixFQUNuQixNQUE4QyxFQUM5QyxPQUVDOzs7O29CQUV1QixXQUFNLE1BQU0sQ0FBQyxXQUFXLEVBQUUsRUFBQTs7Z0JBQTFDLFdBQVcsR0FBSyxDQUFBLFNBQTBCLENBQUEsWUFBL0I7Z0JBQ1gsV0FBVyxHQUFLLE9BQU8sWUFBWixDQUFhO2dCQUNoQyxXQUFPLElBQUksQ0FBQyxTQUFTLHVCQUNoQixDQUFDLFdBQVcsSUFBSSxFQUFFLFdBQVcsYUFBQSxFQUFFLENBQUMsR0FDaEMsQ0FBQyxXQUFXLElBQUk7d0JBQ2pCLFdBQVcsYUFBQTt3QkFDWCxXQUFXLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUM7NkJBQ3JDLElBQUksRUFBRTs2QkFDTixNQUFNLENBQUMsVUFBQyxHQUFHLEVBQUUsRUFBWTs7Z0NBQVosS0FBQSxhQUFZLEVBQVgsR0FBRyxRQUFBLEVBQUUsS0FBSyxRQUFBOzRCQUFNLE9BQUEsdUJBQU0sR0FBRyxnQkFBRyxHQUFHLElBQUcsS0FBSyxPQUFHO3dCQUExQixDQUEwQixFQUFFLEVBQUUsQ0FBQztxQkFDakUsQ0FBQyxFQUNGLEVBQUM7OztLQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcmVkZW50aWFscywgUHJvdmlkZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuLyoqXG4gKiBHZW5lcmF0ZSBrZXkgdG8gaW5kZXggdGhlIGVuZHBvaW50cyBpbiB0aGUgY2FjaGVcbiAqL1xuZXhwb3J0IGNvbnN0IGdldENhY2hlS2V5ID0gYXN5bmMgKFxuICBjb21tYW5kTmFtZTogc3RyaW5nLFxuICBjb25maWc6IHsgY3JlZGVudGlhbHM6IFByb3ZpZGVyPENyZWRlbnRpYWxzPiB9LFxuICBvcHRpb25zOiB7XG4gICAgaWRlbnRpZmllcnM/OiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9O1xuICB9XG4pID0+IHtcbiAgY29uc3QgeyBhY2Nlc3NLZXlJZCB9ID0gYXdhaXQgY29uZmlnLmNyZWRlbnRpYWxzKCk7XG4gIGNvbnN0IHsgaWRlbnRpZmllcnMgfSA9IG9wdGlvbnM7XG4gIHJldHVybiBKU09OLnN0cmluZ2lmeSh7XG4gICAgLi4uKGFjY2Vzc0tleUlkICYmIHsgYWNjZXNzS2V5SWQgfSksXG4gICAgLi4uKGlkZW50aWZpZXJzICYmIHtcbiAgICAgIGNvbW1hbmROYW1lLFxuICAgICAgaWRlbnRpZmllcnM6IE9iamVjdC5lbnRyaWVzKGlkZW50aWZpZXJzKVxuICAgICAgICAuc29ydCgpXG4gICAgICAgIC5yZWR1Y2UoKGFjYywgW2tleSwgdmFsdWVdKSA9PiAoeyAuLi5hY2MsIFtrZXldOiB2YWx1ZSB9KSwge30pLFxuICAgIH0pLFxuICB9KTtcbn07XG4iXX0=